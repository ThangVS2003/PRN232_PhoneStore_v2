@model WebMVC.Models.ProductDetailViewModel

@{
    ViewData["Title"] = Model?.Name ?? "Product Details";
}

<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Product Details</h1>
                <nav class="d-flex align-items-center">
                    <a href="@Url.Action("Index", "Home")">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="@Url.Action("Index", "Product")">Shop<span class="lnr lnr-arrow-right"></span></a>
                    <a href="#">Product Details</a>
                </nav>
            </div>
        </div>
    </div>
</section>
<!-- End Banner Area -->
<!-- Start Product Details Area -->
<section class="product-details-area mt-50">
    <div class="container">
        @if (Model != null)
        {
            <div class="row">
                <!-- Product Image -->
                <div class="col-lg-6 col-md-6">
                    <div class="product-main-img">
                        <img class="img-fluid" src="@(string.IsNullOrEmpty(Model.MainImage) ? Url.Content("~/Content/img/product/p1.jpg") : Model.MainImage)" alt="@Model.Name" id="main-product-image">
                    </div>
                </div>
                <!-- Product Details -->
                <div class="col-lg-6 col-md-6">
                    <div class="product-details-content">
                        <h2>@Model.Name</h2>
                        <div class="product-price">
                            @{
                                var firstValidVariant = Model.Variants.FirstOrDefault(v => v.SellingPrice > 0 && v.StockQuantity > 0);
                                var defaultColor = Model.Variants.FirstOrDefault(v => v.SellingPrice > 0 && v.StockQuantity > 0)?.Color ?? "N/A";
                                var defaultVersion = Model.Variants.FirstOrDefault(v => v.SellingPrice > 0 && v.StockQuantity > 0)?.Version ?? "N/A";
                                var defaultVariant = Model.Variants.FirstOrDefault(v => v.Color == defaultColor && v.Version == defaultVersion && v.SellingPrice > 0 && v.StockQuantity > 0);
                                var defaultSellingPrice = defaultVariant?.SellingPrice ?? 0;
                                var defaultOriginalPrice = defaultVariant?.OriginalPrice ?? 0;
                            }
                        </div>
                        <p>@Model.Description</p>
                        <div class="product-variants">
                            <h4>Available Variants</h4>
                            <form action="@Url.Action("AddToCart", "Cart")" method="post" id="add-to-cart-form">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="hidden" name="variantId" id="variantId" value="" />
                                <!-- Color Selection -->
                                <div class="variant-section mb-3">
                                    <h5>Color</h5>
                                    <div class="variant-boxes d-flex flex-wrap">
                                        @{
                                            var allColors = Model.Variants.Select(v => v.Color ?? "N/A").Distinct().ToList();
                                            var firstValidColor = Model.Variants
                                            .FirstOrDefault(v => v.SellingPrice > 0 && v.StockQuantity > 0)?.Color ?? allColors.FirstOrDefault();
                                            foreach (var color in allColors)
                                            {
                                                <div class="variant-box color-box @(color == firstValidColor ? "selected" : "")"
                                                     data-color="@color"
                                                     style="margin-right: 10px; margin-bottom: 10px;">
                                                    @color
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                                <!-- Version Selection -->
                                <div class="variant-section mb-3">
                                    <h5>Version</h5>
                                    <div class="variant-boxes d-flex flex-wrap">
                                        @{
                                            var allVersions = Model.Variants.Select(v => v.Version ?? "N/A").Distinct().ToList();
                                            var firstValidVersion = Model.Variants
                                            .FirstOrDefault(v => v.SellingPrice > 0 && v.StockQuantity > 0)?.Version ?? allVersions.FirstOrDefault();
                                            foreach (var version in allVersions)
                                            {
                                                <div class="variant-box version-box @(version == firstValidVersion ? "selected" : "")"
                                                     data-version="@version"
                                                     style="margin-right: 10px; margin-bottom: 10px;">
                                                    @version
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                                <!-- Variant Info Display -->
                                <div class="variant-info mt-2">
                                    <p><strong>Selected Variant:</strong> <span id="selected-variant">Color: @firstValidColor, Version: @firstValidVersion</span></p>
                                    <p>
                                        <strong>Price:</strong>
                                        <span class="l-through mr-2" id="variant-original-price">$@defaultOriginalPrice</span>
                                        <span class="price-selling" id="variant-price">$@defaultSellingPrice</span>
                                    </p>
                                    <p><strong>Stock:</strong> <span id="variant-stock">@(defaultVariant?.StockQuantity ?? 0)</span></p>
                                </div>
                                <div class="product-actions mt-3">
                                    <button type="submit" class="primary-btn">Add to Cart</button>
                                    <a href="@Url.Action("AddToWishlist", "Wishlist", new { id = Model.Id })" class="social-info">
                                      
                                       
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <p>Product not found.</p>
                </div>
            </div>
        }
    </div>
</section>
<!-- End Product Details Area -->
@section Scripts {
    <script>
        if (typeof jQuery !== 'undefined') {
            jQuery(document).ready(function () {
                // Variant data from Model
                var variants = @Html.Raw(Json.Serialize(Model.Variants.Select(v => new
            {
                id = v.Id,
                color = v.Color ?? "N/A",
                version = v.Version ?? "N/A",
                sellingPrice = v.SellingPrice,
                stockQuantity = v.StockQuantity,
                image = v.Image,
                originalPrice = v.OriginalPrice
            })));

                // Update available versions based on selected color
                function updateVersions() {
                    var selectedColor = jQuery('.color-box.selected').data('color');
                    var allVersions = variants.map(v => v.version).filter((v, i, a) => a.indexOf(v) === i); // Unique versions
                    var validVersions = variants
                        .filter(v => v.color === selectedColor && v.sellingPrice > 0 && v.stockQuantity > 0)
                        .map(v => v.version);

                    jQuery('.version-box').each(function () {
                        var version = jQuery(this).data('version');
                        if (validVersions.includes(version)) {
                            jQuery(this).removeClass('disabled');
                        } else {
                            jQuery(this).addClass('disabled');
                            if (jQuery(this).hasClass('selected')) {
                                jQuery(this).removeClass('selected');
                                var firstValid = jQuery('.version-box:not(.disabled)').first();
                                if (firstValid.length) firstValid.addClass('selected');
                            }
                        }
                    });

                    updateVariant();
                    updateImage();
                }

                // Update available colors based on selected version
                function updateColors() {
                    var selectedVersion = jQuery('.version-box.selected').data('version');
                    var allColors = variants.map(v => v.color).filter((v, i, a) => a.indexOf(v) === i); // Unique colors
                    var validColors = variants
                        .filter(v => v.version === selectedVersion && v.sellingPrice > 0 && v.stockQuantity > 0)
                        .map(v => v.color);

                    jQuery('.color-box').each(function () {
                        var color = jQuery(this).data('color');
                        if (validColors.includes(color)) {
                            jQuery(this).removeClass('disabled');
                        } else {
                            jQuery(this).addClass('disabled');
                            if (jQuery(this).hasClass('selected')) {
                                jQuery(this).removeClass('selected');
                                var firstValid = jQuery('.color-box:not(.disabled)').first();
                                if (firstValid.length) firstValid.addClass('selected');
                            }
                        }
                    });

                    updateVariant();
                    updateImage();
                }

                // Handle color box click
                jQuery('.color-box').click(function () {
                    if (jQuery(this).hasClass('disabled')) return;
                    jQuery('.color-box').removeClass('selected');
                    jQuery(this).addClass('selected');
                    updateVersions();
                });

                // Handle version box click
                jQuery('.version-box').click(function () {
                    if (jQuery(this).hasClass('disabled')) return;
                    jQuery('.version-box').removeClass('selected');
                    jQuery(this).addClass('selected');
                    updateColors();
                });

                // Update variant selection
                function updateVariant() {
                    var selectedColor = jQuery('.color-box.selected').data('color');
                    var selectedVersion = jQuery('.version-box.selected').data('version');

                    var variant = variants.find(v => v.color === selectedColor && v.version === selectedVersion && v.sellingPrice > 0 && v.stockQuantity > 0);
                    if (variant) {
                        jQuery('#variantId').val(variant.id);
                        jQuery('#selected-variant').text('Color: ' + selectedColor + ', Version: ' + selectedVersion);
                        jQuery('#variant-price').text(variant.sellingPrice);
                        jQuery('#variant-stock').text(variant.stockQuantity);
                        jQuery('#variant-original-price').text(variant.originalPrice);
                        jQuery('#add-to-cart-form button').prop('disabled', false);
                    } else {
                        jQuery('#variantId').val('');
                        jQuery('#selected-variant').text('Invalid combination');
                        jQuery('#variant-price').text('0');
                        jQuery('#variant-stock').text('0');
                        jQuery('#variant-original-price').text('0');
                        jQuery('#add-to-cart-form button').prop('disabled', true);
                    }
                }

                // Update main image based on selected color
                function updateImage() {
                    var selectedColor = jQuery('.color-box.selected').data('color');
                    var variantWithImage = variants.find(v => v.color === selectedColor && v.sellingPrice > 0 && v.stockQuantity > 0);
                    var newImage = variantWithImage ? variantWithImage.image : '@(Model.MainImage ?? Url.Content("~/Content/img/product/p1.jpg"))';
                    jQuery('#main-product-image').attr('src', newImage);
                }

                // Initialize with first valid combination
                var firstValidVariant = variants.find(v => v.sellingPrice > 0 && v.stockQuantity > 0);
                if (firstValidVariant) {
                    jQuery('.color-box[data-color="' + firstValidVariant.color + '"]').addClass('selected');
                    jQuery('.version-box[data-version="' + firstValidVariant.version + '"]').addClass('selected');
                }
                updateVersions();
                updateColors();
                updateImage();
                updateVariant();

                // Image gallery switching
                jQuery('.product-gallery img').click(function () {
                    jQuery('#main-product-image').attr('src', jQuery(this).attr('src'));
                });
            });
        } else {
            console.warn('jQuery is not loaded. Image gallery and variant selection functionality are disabled.');
        }
    </script>
    <style>
        .variant-box {
            border: 1px solid #ddd;
            padding: 10px 15px;
            border-radius: 5px;
            transition: all 0.3s;
            margin-right: 10px;
            margin-bottom: 10px;
        }

            .variant-box:not(.disabled) {
                cursor: pointer;
            }

                .variant-box:not(.disabled):hover {
                    background-color: #f8f8f8;
                }

            .variant-box.selected:not(.disabled) {
                border-color: #ffba00;
                background-color: #fff3cd;
            }

            .variant-box.disabled {
                opacity: 0.5;
                cursor: not-allowed;
                background-color: #f0f0f0;
            }

        .variant-section h5 {
            margin-bottom: 10px;
        }

        .variant-info p {
            margin-bottom: 5px;
        }

        .l-through {
            text-decoration: line-through; 
            color: #888;
            margin-right: 10px;
        }

        .price-selling {
            font-size: 1.5em;
            color: #000;
            font-weight: bold;
        }

        .product-price {
            display: flex;
            align-items: baseline;
        }
    </style>
}