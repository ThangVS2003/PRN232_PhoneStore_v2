@model List<WebMVC.Models.ProductDetailViewModel>

@{
    ViewData["Title"] = "Bảng Sản phẩm";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
    var selectedName = ViewBag.SelectedName as string ?? "";
    var selectedBrandId = (int?)ViewBag.SelectedBrandId ?? 0;
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2 align-items-center">
            <div class="col-sm-6">
                <h1>Danh sách sản phẩm</h1>
            </div>
            <div class="col-sm-6 text-right">
                <button class="btn btn-success" style="background-color: #28a745; color: white;" data-toggle="modal" data-target="#addProductModal">
                    <i class="fas fa-plus"></i> Add Product
                </button>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="box">
        <div class="box-header with-border">
            <form method="get" action="/Products/Search" class="form-inline mb-3">
                <div class="form-group mr-2">
                    <input type="text" name="name" value="@selectedName" placeholder="Product Name..." class="form-control" />
                </div>
                <div class="form-group mr-2">
                    <select name="brandId" class="form-control">
                        @foreach (var item in ViewBag.Brands as List<SelectListItem>)
                            {
                                var isSelected = item.Value == selectedBrandId.ToString() ? "selected" : "";
                                @:<option value="@item.Value" @isSelected>@item.Text</option>
                            }
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
        <div class="box-body table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Main image</th>
                        <th>Brand</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.MainImage))
                                    {
                                        <img src="@item.MainImage" alt="Ảnh sản phẩm" width="80" height="80" />
                                    }
                                    else
                                    {
                                        <span>Không có ảnh</span>
                                    }
                                </td>
                                <td>@item.BrandName</td>
                                <td>
                                    @if (item.IsDeleted)
                                    {
                                        <span class="label label-danger">remove</span>
                                    }
                                    else
                                    {
                                        <span class="label label-success">active</span>
                                    }
                                </td>
                                <td>
                                    <div style="display: flex; justify-content: center; gap: 6px;">
                                        <a href="@Url.Action("Details", "Products", new { id = item.Id })" class="btn btn-info btn-sm" style="background-color: #4285F4; color: white;">Details</a>
                                        <a href="javascript:void(0);"
                                           class="btn btn-warning btn-sm"
                                           data-id="@item.Id"
                                           data-name="@item.Name"
                                           data-description="@item.Description"
                                           data-brandname="@item.BrandName"
                                           data-mainimage="@item.MainImage"
                                           onclick="prepareEditModal(this)">
                                           Edit
                                        </a>

                                        @if (item.IsDeleted)
                                        {
                                            <button class="btn btn-success btn-sm" onclick="restoreProduct(@item.Id)">
                                                    Restore
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-sm" onclick="deleteProduct(@item.Id)">
                                                    Delete
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center text-danger font-weight-bold">No suitable product.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>


<!-- Modal Thêm Sản Phẩm -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <!-- HEADER -->
            <div class="modal-header d-flex justify-content-between align-items-center">
                <h5 class="modal-title font-weight-bold mb-0" style="font-size: 20px;">Add New Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="resetAddProductForm()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- FORM -->
            <form id="addProductForm" onsubmit="submitAddProductForm(event)">
                <div class="modal-body">
                    <div class="form-group">
                        <label>Product Name</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Description</label>
                        <textarea name="Description" class="form-control" required></textarea>
                    </div>

                    <div class="form-group">
                        <label>Brand</label>
                        <select name="BrandName" class="form-control" required>
                            <option value="" selected disabled>Select Brand</option>
                            @foreach (var item in ViewBag.Brands as List<SelectListItem>)
                            {
                                if (item.Value != "0") // Bỏ "All"
                                {
                                    <option value="@item.Text">@item.Text</option> <!-- gửi BrandName -->
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Main Image URL</label>
                        <input type="text" name="MainImage" class="form-control" />
                    </div>
                </div>

                <!-- FOOTER -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="resetAddProductForm()">Close</button>
                    <button type="submit" class="btn btn-primary">Save Product</button>
                </div>
            </form>

        </div>
    </div>
</div>


<!-- Logic Thêm Sản Phẩm -->
<script>
    async function submitAddProductForm(event) {
        event.preventDefault();

        const form = document.getElementById("addProductForm");
        const formData = new FormData(form);

        const data = {
            Name: formData.get("Name").trim(),
            Description: formData.get("Description").trim(),
            BrandName: formData.get("BrandName"),
            MainImage: formData.get("MainImage").trim()
        };

        // Kiểm tra dữ liệu
        if (!data.Name || !data.Description || !data.BrandName) {
            alert("Please fill in all required fields.");
            return;
        }

        try {
            const response = await fetch("/Products/Create", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                $('#addProductModal').modal('hide');
                resetAddProductForm();
                alert("Product added successfully.");
                location.reload(); // Reload trang để thấy dữ liệu mới
            } else {
                const err = await response.text();
                alert("Failed to add product: " + err);
            }
        } catch (error) {
            alert("Error: " + error);
        }
    }

    function resetAddProductForm() {
        const form = document.getElementById("addProductForm");
        if (form) form.reset();
    }

    $('#addProductModal').on('hidden.bs.modal', function () {
        resetAddProductForm();
    });
</script>



<!-- Modal Chỉnh sửa Sản phẩm -->
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <!-- HEADER -->
            <div class="modal-header d-flex justify-content-between align-items-center">
                <h5 class="modal-title font-weight-bold mb-0" style="font-size: 20px;">Edit Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="resetEditProductForm()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- FORM -->
            <form id="editProductForm" onsubmit="submitEditProductForm(event)">
                <div class="modal-body">
                    <input type="hidden" name="Id" /> <!-- ẩn Id sản phẩm -->

                    <div class="form-group">
                        <label>Product Name</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Description</label>
                        <textarea name="Description" class="form-control" required></textarea>
                    </div>

                    <div class="form-group">
                        <label>Brand</label>
                        <select name="BrandName" class="form-control" required>
                            <option value="" disabled>Select Brand</option>
                            @foreach (var item in ViewBag.Brands as List<SelectListItem>)
                            {
                                if (item.Value != "0")
                                {
                                    <option value="@item.Text">@item.Text</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Main Image URL</label>
                        <input type="text" name="MainImage" class="form-control" />
                    </div>
                </div>

                <!-- FOOTER -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="resetEditProductForm()">Close</button>
                    <button type="submit" class="btn btn-primary">Update Product</button>
                </div>
            </form>

        </div>
    </div>
</div>


<!-- Logic Chỉnh sửa Sản Phẩm -->
<script>
            function prepareEditModal(button) {
        const form = document.getElementById("editProductForm");

        form.elements["Id"].value = button.getAttribute("data-id");
        form.elements["Name"].value = button.getAttribute("data-name");
        form.elements["Description"].value = button.getAttribute("data-description");
        form.elements["BrandName"].value = button.getAttribute("data-brandname");
        form.elements["MainImage"].value = button.getAttribute("data-mainimage");

        // Hiển thị modal
        $('#editProductModal').modal('show');
    }

    function resetEditProductForm() {
        const form = document.getElementById("editProductForm");
        if (form) form.reset();
    }

    $('#editProductModal').on('hidden.bs.modal', function () {
        resetEditProductForm();
    });

     async function submitEditProductForm(event) {
        event.preventDefault();

        const form = document.getElementById("editProductForm");
        const formData = new FormData(form);

        const data = {
            Id: parseInt(formData.get("Id")),
            Name: formData.get("Name").trim(),
            Description: formData.get("Description").trim(),
            BrandName: formData.get("BrandName"),
            MainImage: formData.get("MainImage").trim()
        };

        if (!data.Name || !data.Description || !data.BrandName) {
            alert("Please fill in all required fields.");
            return;
        }

        try {
            const response = await fetch(`/Products/Update/${data.Id}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                $('#editProductModal').modal('hide');
                resetEditProductForm();
                alert("Product updated successfully.");
                location.reload();
            } else {
                const err = await response.text();
                alert("Failed to update product: " + err);
            }
        } catch (error) {
            alert("Error: " + error);
        }
    }
</script>


<!-- Logic Xóa Sản Phẩm -->
<script>
        async function deleteProduct(id) {
        if (!confirm("Bạn có chắc chắn muốn xóa sản phẩm này?")) return;

        try {
            const response = await fetch(`/Products/Delete/${id}`, {
                method: "DELETE"
            });

            if (response.ok) {
                alert("Xóa sản phẩm thành công.");
                location.reload();
            } else {
                const error = await response.text();
                if (error.includes("đã được đặt")) {
                    alert(error); // Nội dung thông báo đã có sẵn từ Web API
                } else {
                    alert("Xóa sản phẩm thất bại: " + error);
                }
            }
        } catch (err) {
            alert("Đã xảy ra lỗi: " + err);
        }
    }
</script>


<!-- Logic Khôi phục Sản Phẩm -->
<script>
    async function restoreProduct(id) {
        if (!confirm("Bạn có chắc chắn muốn khôi phục sản phẩm này?")) return;

        try {
            const response = await fetch(`/Products/Restore/${id}`, {
                method: "PUT"
            });

            if (response.ok) {
                alert("Khôi phục sản phẩm thành công.");
                location.reload();
            } else {
                const error = await response.text();
                alert("Khôi phục sản phẩm thất bại: " + error);
            }
        } catch (err) {
            alert("Đã xảy ra lỗi: " + err);
        }
    }
</script>
