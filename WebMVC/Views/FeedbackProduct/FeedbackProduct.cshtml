@model PhoneStoreMVC.ViewModels.FeedbackProductViewModel
@using WebMVC.Models

@{
    ViewData["Title"] = "Gửi Phản Hồi Sản Phẩm";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #0070f3;
            --primary-foreground: #ffffff;
            --background: #ffffff;
            --foreground: #000000;
            --card: #ffffff;
            --card-foreground: #000000;
            --border: #e5e7eb;
            --input: #e5e7eb;
            --ring: #0070f3;
            --radius: 0.5rem;
            --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        }

        body {
            background-color: var(--background);
            color: var(--foreground);
        }

        .card {
            border-radius: var(--radius);
            background: var(--card);
            color: var(--card-foreground);
            border: 1px solid var(--border);
        }

        .star-rating {
            font-size: 2rem;
            display: inline-flex;
            gap: 0.5rem;
            cursor: pointer;
        }

            .star-rating i {
                color: #ccc;
                transition: color 0.2s ease;
            }

                .star-rating i.active,
                .star-rating i:hover,
                .star-rating i:hover ~ i {
                    color: #ffd700;
                }

        .form-control:focus {
            border-color: var(--ring);
            box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.2);
        }

        .btn-primary {
            background-color: var(--primary);
            border-color: var(--primary);
            color: var(--primary-foreground);
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

            .btn-primary:disabled {
                background-color: #ccc;
                border-color: #ccc;
            }

        .toast {
            border-radius: var(--radius);
        }

        }
    </style>
</head>
<body>
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Gửi Phản Hồi cho @Model.ProductName</h4>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.ProductImage))
                        {
                            <div class="text-center mb-4">
                                <img src="@Model.ProductImage" alt="@Model.ProductName" class="img-fluid rounded" style="max-height: 100px;" />
                            </div>
                        }
                        <form asp-action="FeedbackProduct" asp-controller="FeedbackProduct" method="post" id="feedbackForm" class="needs-validation" novalidate>
                            @Html.AntiForgeryToken()
                            <input type="hidden" asp-for="OrderId" />
                            <input type="hidden" asp-for="ProductId" />
                            <input type="hidden" asp-for="UserId" />

                            @if (!ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger">
                                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <p>@error.ErrorMessage</p>
                                    }
                                </div>
                            }

                            <div class="mb-4 text-center">
                                <label asp-for="Rating" class="form-label">Đánh Giá Trải Nghiệm</label>
                                <div class="star-rating">
                                    <i class="fas fa-star" data-rating="1"></i>
                                    <i class="fas fa-star" data-rating="2"></i>
                                    <i class="fas fa-star" data-rating="3"></i>
                                    <i class="fas fa-star" data-rating="4"></i>
                                    <i class="fas fa-star" data-rating="5"></i>
                                </div>
                                <input type="hidden" asp-for="Rating" id="ratingInput" required />
                                <div class="invalid-feedback">Vui lòng chọn mức đánh giá</div>
                            </div>
                            <div class="mb-4">
                                <label asp-for="Comment" class="form-label">Phản Hồi Của Bạn</label>
                                <textarea asp-for="Comment" class="form-control" id="feedbackText" rows="5" placeholder="Hãy chia sẻ trải nghiệm của bạn..." maxlength="500"></textarea>
                                <div class="invalid-feedback">Vui lòng nhập phản hồi của bạn</div>
                                <div class="form-text text-end"><span id="charCount">0</span>/500</div>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Gửi Phản Hồi</button>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="toast-container position-fixed bottom-0 end-0 p-3">
                    <div id="feedbackToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header bg-success text-white">
                            <strong class="me-auto">Thành Công</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">Cảm ơn bạn đã gửi phản hồi quý giá!</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        (function () {
            'use strict';

            const feedbackForm = document.getElementById('feedbackForm');
            const ratingInput = document.getElementById('ratingInput');
            const stars = document.querySelectorAll('.star-rating i');
            const feedbackText = document.getElementById('feedbackText');
            const charCount = document.getElementById('charCount');
            const submitBtn = document.getElementById('submitBtn');
            const toastElement = document.getElementById('feedbackToast');
            const toast = new bootstrap.Toast(toastElement);

            // Xử lý chọn xếp hạng sao
            stars.forEach(star => {
                star.addEventListener('click', () => {
                    const rating = star.getAttribute('data-rating');
                    ratingInput.value = rating;
                    stars.forEach(s => s.classList.remove('active'));
                    for (let i = 0; i < rating; i++) {
                        stars[i].classList.add('active');
                    }
                    validateForm();
                });
            });

            // Cập nhật số đếm ký tự cho phản hồi
            feedbackText.addEventListener('input', () => {
                charCount.textContent = feedbackText.value.length;
                validateForm();
            });

            // Xác thực biểu mẫu để bật/tắt nút gửi
            function validateForm() {
                const isRatingSelected = ratingInput.value !== '';
                const isFeedbackValid = true; // Comment là tùy chọn
                submitBtn.disabled = !isRatingSelected;
            }

            // Xác thực biểu mẫu Bootstrap
            feedbackForm.addEventListener('submit', function (event) {
                if (!feedbackForm.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                } else {
                    // Hiển thị toast khi gửi biểu mẫu thành công
                    setTimeout(() => toast.show(), 500);
                }
                feedbackForm.classList.add('was-validated');
            });

            // Khởi tạo số đếm ký tự
            charCount.textContent = feedbackText.value.length;
            validateForm();
        })();
    </script>
</body>
</html>